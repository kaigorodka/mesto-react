{"ast":null,"code":"export class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  getCardList() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  editUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  deleteCard(data) {\n    console.log(data);\n    return fetch(`${this._baseUrl}/cards/${data._cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  likeThePhoto(data) {\n    console.log(data);\n    return fetch(`${this._baseUrl}/cards/${data._id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  removeLike(data) {\n    return fetch(`${this._baseUrl}/cards/${data._id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-65/\",\n  headers: {\n    authorization: \"946c735e-253d-40be-bd13-90c7647e3ddc\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_getResponseData","res","ok","Promise","reject","status","json","getUserInfo","fetch","then","getCardList","editUserInfo","data","method","body","JSON","stringify","name","about","editUserAvatar","avatar","addNewCard","link","deleteCard","console","log","_cardId","likeThePhoto","_id","removeLike","api","authorization"],"sources":["/Users/a1234/Desktop/front/mesto-react/src/utils/ api.js"],"sourcesContent":["export class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, { headers: this._headers }).then(\n      (res) => {\n        return this._getResponseData(res);\n      }\n    );\n  }\n  getCardList() {\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers }).then(\n      (res) => {\n        return this._getResponseData(res);\n      }\n    );\n  }\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n  editUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n  deleteCard(data) {\n    console.log(data);\n    return fetch(`${this._baseUrl}/cards/${data._cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n  likeThePhoto(data) {\n    console.log(data);\n    return fetch(`${this._baseUrl}/cards/${data._id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n  removeLike(data) {\n    return fetch(`${this._baseUrl}/cards/${data._id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-65/\",\n  headers: {\n    authorization: \"946c735e-253d-40be-bd13-90c7647e3ddc\",\n    \"Content-Type\": \"application/json\",\n  },\n});\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}